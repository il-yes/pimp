<?php
/**
 * Created by PhpStorm.
 * User: versus
 * Date: 24/01/18
 * Time: 14:57
 */

namespace ProductBundle\Tests\Factory;

use PHPUnit\Framework\TestCase;
use ProductBundle\Factory\VehiculeFactory;


class VehiculeFactoryTest extends TestCase
{
    const TYPE_1 = 'automobile';
    const TYPE_2 = 'motorcycle';
    const TYPE_3 = 'poids_lourd';

    const AUDIO_SYSTEM = 'wish a new audio system';
    const CAR_REPAIR = 'need to repair my engine';

    private $vehiculeFactory;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->vehiculeFactory = new VehiculeFactory();
    }

    /**
     * @test
     */
    public function createATruckVehicule()
    {

        $truck = $this->vehiculeFactory->createVehicule(self::TYPE_3);
        $truck->setState(self::AUDIO_SYSTEM);

        $this->assertEquals(self::TYPE_3, $truck->getType());
        $this->assertEquals(self::AUDIO_SYSTEM, $truck->getState());
    }


    /**
     * @dataProvider createFromSpecification
     * @test
     */
    public function createVehiculesFromSpecification($type)
    {
        $vehicule = $this->vehiculeFactory->createFromSpecification($type);

        switch ($type)
        {
            case self::TYPE_2 :
                $this->assertEquals(self::TYPE_2, $vehicule->getType());
                break;

            case self::TYPE_1 :
                self::assertEquals(self::TYPE_1, $vehicule->getType());
                break;

            case self::TYPE_3 :
                self::assertEquals(self::TYPE_3, $vehicule->getType());
                break;
        }
    }

    public function createFromSpecification()
    {
        return [
            // $type, $state
            [self::TYPE_1],
            [self::TYPE_2],
            [self::TYPE_3]
        ];
    }
}